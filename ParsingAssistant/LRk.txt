Стековый метод для LR(k)-грамматик

LR(k)-грамматики – это класс КС-грамматик, гарантирующих существование детерминированных восходящих распознавателей 
(L – левосторонний просмотр, R – правосторонний разбор, k – количество символов, просматриваемых для однозначного определения следующего правила). 

В грамматиках этого класса отсутствуют правила с правосторонней рекурсией, и обеспечивается однозначное выделение основы. 
К этому классу, например, относятся грамматики с операторным предшествованием, простым предшествованием и расширенным предшествованием, обеспечивающие еще более простые алгоритмы распознавания. 

При восходящем разборе стек используют для накопления основы. Автомат при этом выполняет две основные операции: свертку и перенос. 
Свертка выполняется, когда в стеке накоплена вся основа, и заключается в ее замене на левую часть соответствующего правила. 
Перенос выполняется в процессе накопления основы и заключается в сохранении в стеке очередного распознаваемого символа сентенциальной формы. 

Основная проблема метода заключается в нахождении способа выделения очередной основы. 
Проще всего основу выделить для грамматик, получивших название «грамматики предшествования». 

Рассмотрим эти грамматики. 
Если два символа α, β ∈V расположены рядом в сентенциальной форме, то между ними возможны следующие отношения, названные отношениями предшествования: 
   - α принадлежит основе, а β – нет, т. е. α – конец основы: α ⋅> β; 
   - β принадлежит основе, а α – нет, т. е. β – начало основы: α <⋅ β ;
   - α и β принадлежит одной основе, т. е. α =⋅ β; 
   - α и β не могут находиться рядом в сентенциальной форме (ошибка).

 Грамматикой с предшествованием называется грамматика, в которой существует однозначное отношение предшествования между соседними символами. Это отношение позволяет просто определить очередную основу, т. е. момент выполнения каждой свертки. 
Различают: 
   1) грамматики с простым предшествованием, для которых α, β ∈V; 
   2) грамматики с операторным предшествованием, для которых α, β ∈VТ; т. е. отношение предшествования определено для терминальных символов и не зависит  от нетерминальных символов, расположенных между ними;
   3) грамматики со слабым предшествованием, для которых отношение предшествования не однозначно – оно требует выполнения специальных проверок. 

Пример.  
Грамматика описания арифметических выражений, представленная ниже, относится к классу грамматик с операторным предшествованием: 
<Выражение>  ::= <Терм> | < Терм > + <Выражение>  | <Терм> - <Выражение> 
<Терм>  ::= <Множитель> | <Множитель>* <Терм> | <Множитель> / <Терм> 
<Множитель> ::= (<Выражение>) | <Идентификатор> 

Отношения предшествования терминалов (знаков операций), полученные с учетом приоритетов операций, сведены в таблицу:

     |  +     *     (      )    ◄
___|__________________
 ► |<⋅   <⋅   <⋅   ?    Выход
 +  |⋅>   <⋅   <⋅   ⋅>   ⋅>
 *   |⋅>   ⋅>   <⋅   ⋅>   ⋅>
 (   |<⋅   <⋅   <⋅    =     ?
 )   |⋅>   ⋅>   ?    ⋅>   ⋅>

Обозначения: 
     ? – ошибка; 
     < - начало основы; 
     > - конец основы; 
     = - принадлежат одной основе; 
     ►- начало выражения; 
     ◄ - конец выражения. 

В соответствие с этой таблицей при разборе выражения: 
►d+c*(a+b) ◄ 
содержимое стека будет выглядеть следующим образом: 

Содержимое стека: ►                     Содержимое стека: d+     Отношение: <⋅             Операция: Перенос   Тройка:                      Результат свертки: 
Содержимое стека: ►d+                Содержимое стека: c*      Отношение: <⋅             Операция: Перенос   Тройка:                      Результат свертки: 
Содержимое стека: ►d+ c*           Содержимое стека: (         Отношение: <⋅             Операция: Перенос   Тройка:                      Результат свертки: 
Содержимое стека: ►d+ c*(          Содержимое стека: a+     Отношение: <⋅             Операция: Перенос   Тройка:                      Результат свертки: 
Содержимое стека: ►d+ c*( a+    Содержимое стека: b)       Отношение: ⋅>             Операция: Свертка    Тройка: R1:= a + b    Результат свертки: <Выражение>
Содержимое стека: ►d+ c*(          Содержимое стека: R1)     Отношение: =⋅             Операция: Свертка    Тройка: R1:= (R1)      Результат свертки: <Множитель>
Содержимое стека: ►d+ c*           Содержимое стека: R1◄   Отношение: ⋅>             Операция: Свертка    Тройка: R2:= c* R1    Результат свертки: <Терм>
Содержимое стека: ►d+                Содержимое стека: R2◄   Отношение: ⋅>             Операция: Свертка    Тройка: R3:= d+ R2   Результат свертки: <Выражение>
Содержимое стека: ►                     Содержимое стека: R3◄   Отношение: Конец    